<?php
/**
 * NativeStatStats
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * HAProxy Data Plane API
 *
 * API for editing and managing haproxy instances. Provides process information, configuration management, haproxy stats and logs.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * OpenAPI spec version: 2.0
 * Contact: support@haproxy.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.19
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * NativeStatStats Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class NativeStatStats implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'native_stat_stats';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'act' => 'int',
'addr' => 'string',
'agent_code' => 'int',
'agent_desc' => 'string',
'agent_duration' => 'int',
'agent_fall' => 'int',
'agent_health' => 'int',
'agent_rise' => 'int',
'agent_status' => 'string',
'algo' => 'string',
'bck' => 'int',
'bin' => 'int',
'bout' => 'int',
'check_code' => 'int',
'check_desc' => 'string',
'check_duration' => 'int',
'check_fall' => 'int',
'check_health' => 'int',
'check_rise' => 'int',
'check_status' => 'string',
'chkdown' => 'int',
'chkfail' => 'int',
'cli_abrt' => 'int',
'comp_byp' => 'int',
'comp_in' => 'int',
'comp_out' => 'int',
'comp_rsp' => 'int',
'conn_rate' => 'int',
'conn_rate_max' => 'int',
'conn_tot' => 'int',
'cookie' => 'string',
'ctime' => 'int',
'dcon' => 'int',
'downtime' => 'int',
'dreq' => 'int',
'dresp' => 'int',
'dses' => 'int',
'econ' => 'int',
'ereq' => 'int',
'eresp' => 'int',
'hanafail' => 'string',
'hrsp_1xx' => 'int',
'hrsp_2xx' => 'int',
'hrsp_3xx' => 'int',
'hrsp_4xx' => 'int',
'hrsp_5xx' => 'int',
'hrsp_other' => 'int',
'iid' => 'int',
'intercepted' => 'int',
'lastchg' => 'int',
'lastsess' => 'int',
'lbtot' => 'int',
'mode' => 'string',
'pid' => 'int',
'qcur' => 'int',
'qlimit' => 'int',
'qmax' => 'int',
'qtime' => 'int',
'rate' => 'int',
'rate_lim' => 'int',
'rate_max' => 'int',
'req_rate' => 'int',
'req_rate_max' => 'int',
'req_tot' => 'int',
'rtime' => 'int',
'scur' => 'int',
'sid' => 'int',
'slim' => 'int',
'smax' => 'int',
'srv_abrt' => 'int',
'status' => 'string',
'stot' => 'int',
'throttle' => 'int',
'tracked' => 'string',
'ttime' => 'int',
'weight' => 'int',
'wredis' => 'int',
'wretr' => 'int'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'act' => null,
'addr' => null,
'agent_code' => null,
'agent_desc' => null,
'agent_duration' => null,
'agent_fall' => null,
'agent_health' => null,
'agent_rise' => null,
'agent_status' => null,
'algo' => null,
'bck' => null,
'bin' => null,
'bout' => null,
'check_code' => null,
'check_desc' => null,
'check_duration' => null,
'check_fall' => null,
'check_health' => null,
'check_rise' => null,
'check_status' => null,
'chkdown' => null,
'chkfail' => null,
'cli_abrt' => null,
'comp_byp' => null,
'comp_in' => null,
'comp_out' => null,
'comp_rsp' => null,
'conn_rate' => null,
'conn_rate_max' => null,
'conn_tot' => null,
'cookie' => null,
'ctime' => null,
'dcon' => null,
'downtime' => null,
'dreq' => null,
'dresp' => null,
'dses' => null,
'econ' => null,
'ereq' => null,
'eresp' => null,
'hanafail' => null,
'hrsp_1xx' => null,
'hrsp_2xx' => null,
'hrsp_3xx' => null,
'hrsp_4xx' => null,
'hrsp_5xx' => null,
'hrsp_other' => null,
'iid' => null,
'intercepted' => null,
'lastchg' => null,
'lastsess' => null,
'lbtot' => null,
'mode' => null,
'pid' => null,
'qcur' => null,
'qlimit' => null,
'qmax' => null,
'qtime' => null,
'rate' => null,
'rate_lim' => null,
'rate_max' => null,
'req_rate' => null,
'req_rate_max' => null,
'req_tot' => null,
'rtime' => null,
'scur' => null,
'sid' => null,
'slim' => null,
'smax' => null,
'srv_abrt' => null,
'status' => null,
'stot' => null,
'throttle' => null,
'tracked' => null,
'ttime' => null,
'weight' => null,
'wredis' => null,
'wretr' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'act' => 'act',
'addr' => 'addr',
'agent_code' => 'agent_code',
'agent_desc' => 'agent_desc',
'agent_duration' => 'agent_duration',
'agent_fall' => 'agent_fall',
'agent_health' => 'agent_health',
'agent_rise' => 'agent_rise',
'agent_status' => 'agent_status',
'algo' => 'algo',
'bck' => 'bck',
'bin' => 'bin',
'bout' => 'bout',
'check_code' => 'check_code',
'check_desc' => 'check_desc',
'check_duration' => 'check_duration',
'check_fall' => 'check_fall',
'check_health' => 'check_health',
'check_rise' => 'check_rise',
'check_status' => 'check_status',
'chkdown' => 'chkdown',
'chkfail' => 'chkfail',
'cli_abrt' => 'cli_abrt',
'comp_byp' => 'comp_byp',
'comp_in' => 'comp_in',
'comp_out' => 'comp_out',
'comp_rsp' => 'comp_rsp',
'conn_rate' => 'conn_rate',
'conn_rate_max' => 'conn_rate_max',
'conn_tot' => 'conn_tot',
'cookie' => 'cookie',
'ctime' => 'ctime',
'dcon' => 'dcon',
'downtime' => 'downtime',
'dreq' => 'dreq',
'dresp' => 'dresp',
'dses' => 'dses',
'econ' => 'econ',
'ereq' => 'ereq',
'eresp' => 'eresp',
'hanafail' => 'hanafail',
'hrsp_1xx' => 'hrsp_1xx',
'hrsp_2xx' => 'hrsp_2xx',
'hrsp_3xx' => 'hrsp_3xx',
'hrsp_4xx' => 'hrsp_4xx',
'hrsp_5xx' => 'hrsp_5xx',
'hrsp_other' => 'hrsp_other',
'iid' => 'iid',
'intercepted' => 'intercepted',
'lastchg' => 'lastchg',
'lastsess' => 'lastsess',
'lbtot' => 'lbtot',
'mode' => 'mode',
'pid' => 'pid',
'qcur' => 'qcur',
'qlimit' => 'qlimit',
'qmax' => 'qmax',
'qtime' => 'qtime',
'rate' => 'rate',
'rate_lim' => 'rate_lim',
'rate_max' => 'rate_max',
'req_rate' => 'req_rate',
'req_rate_max' => 'req_rate_max',
'req_tot' => 'req_tot',
'rtime' => 'rtime',
'scur' => 'scur',
'sid' => 'sid',
'slim' => 'slim',
'smax' => 'smax',
'srv_abrt' => 'srv_abrt',
'status' => 'status',
'stot' => 'stot',
'throttle' => 'throttle',
'tracked' => 'tracked',
'ttime' => 'ttime',
'weight' => 'weight',
'wredis' => 'wredis',
'wretr' => 'wretr'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'act' => 'setAct',
'addr' => 'setAddr',
'agent_code' => 'setAgentCode',
'agent_desc' => 'setAgentDesc',
'agent_duration' => 'setAgentDuration',
'agent_fall' => 'setAgentFall',
'agent_health' => 'setAgentHealth',
'agent_rise' => 'setAgentRise',
'agent_status' => 'setAgentStatus',
'algo' => 'setAlgo',
'bck' => 'setBck',
'bin' => 'setBin',
'bout' => 'setBout',
'check_code' => 'setCheckCode',
'check_desc' => 'setCheckDesc',
'check_duration' => 'setCheckDuration',
'check_fall' => 'setCheckFall',
'check_health' => 'setCheckHealth',
'check_rise' => 'setCheckRise',
'check_status' => 'setCheckStatus',
'chkdown' => 'setChkdown',
'chkfail' => 'setChkfail',
'cli_abrt' => 'setCliAbrt',
'comp_byp' => 'setCompByp',
'comp_in' => 'setCompIn',
'comp_out' => 'setCompOut',
'comp_rsp' => 'setCompRsp',
'conn_rate' => 'setConnRate',
'conn_rate_max' => 'setConnRateMax',
'conn_tot' => 'setConnTot',
'cookie' => 'setCookie',
'ctime' => 'setCtime',
'dcon' => 'setDcon',
'downtime' => 'setDowntime',
'dreq' => 'setDreq',
'dresp' => 'setDresp',
'dses' => 'setDses',
'econ' => 'setEcon',
'ereq' => 'setEreq',
'eresp' => 'setEresp',
'hanafail' => 'setHanafail',
'hrsp_1xx' => 'setHrsp1xx',
'hrsp_2xx' => 'setHrsp2xx',
'hrsp_3xx' => 'setHrsp3xx',
'hrsp_4xx' => 'setHrsp4xx',
'hrsp_5xx' => 'setHrsp5xx',
'hrsp_other' => 'setHrspOther',
'iid' => 'setIid',
'intercepted' => 'setIntercepted',
'lastchg' => 'setLastchg',
'lastsess' => 'setLastsess',
'lbtot' => 'setLbtot',
'mode' => 'setMode',
'pid' => 'setPid',
'qcur' => 'setQcur',
'qlimit' => 'setQlimit',
'qmax' => 'setQmax',
'qtime' => 'setQtime',
'rate' => 'setRate',
'rate_lim' => 'setRateLim',
'rate_max' => 'setRateMax',
'req_rate' => 'setReqRate',
'req_rate_max' => 'setReqRateMax',
'req_tot' => 'setReqTot',
'rtime' => 'setRtime',
'scur' => 'setScur',
'sid' => 'setSid',
'slim' => 'setSlim',
'smax' => 'setSmax',
'srv_abrt' => 'setSrvAbrt',
'status' => 'setStatus',
'stot' => 'setStot',
'throttle' => 'setThrottle',
'tracked' => 'setTracked',
'ttime' => 'setTtime',
'weight' => 'setWeight',
'wredis' => 'setWredis',
'wretr' => 'setWretr'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'act' => 'getAct',
'addr' => 'getAddr',
'agent_code' => 'getAgentCode',
'agent_desc' => 'getAgentDesc',
'agent_duration' => 'getAgentDuration',
'agent_fall' => 'getAgentFall',
'agent_health' => 'getAgentHealth',
'agent_rise' => 'getAgentRise',
'agent_status' => 'getAgentStatus',
'algo' => 'getAlgo',
'bck' => 'getBck',
'bin' => 'getBin',
'bout' => 'getBout',
'check_code' => 'getCheckCode',
'check_desc' => 'getCheckDesc',
'check_duration' => 'getCheckDuration',
'check_fall' => 'getCheckFall',
'check_health' => 'getCheckHealth',
'check_rise' => 'getCheckRise',
'check_status' => 'getCheckStatus',
'chkdown' => 'getChkdown',
'chkfail' => 'getChkfail',
'cli_abrt' => 'getCliAbrt',
'comp_byp' => 'getCompByp',
'comp_in' => 'getCompIn',
'comp_out' => 'getCompOut',
'comp_rsp' => 'getCompRsp',
'conn_rate' => 'getConnRate',
'conn_rate_max' => 'getConnRateMax',
'conn_tot' => 'getConnTot',
'cookie' => 'getCookie',
'ctime' => 'getCtime',
'dcon' => 'getDcon',
'downtime' => 'getDowntime',
'dreq' => 'getDreq',
'dresp' => 'getDresp',
'dses' => 'getDses',
'econ' => 'getEcon',
'ereq' => 'getEreq',
'eresp' => 'getEresp',
'hanafail' => 'getHanafail',
'hrsp_1xx' => 'getHrsp1xx',
'hrsp_2xx' => 'getHrsp2xx',
'hrsp_3xx' => 'getHrsp3xx',
'hrsp_4xx' => 'getHrsp4xx',
'hrsp_5xx' => 'getHrsp5xx',
'hrsp_other' => 'getHrspOther',
'iid' => 'getIid',
'intercepted' => 'getIntercepted',
'lastchg' => 'getLastchg',
'lastsess' => 'getLastsess',
'lbtot' => 'getLbtot',
'mode' => 'getMode',
'pid' => 'getPid',
'qcur' => 'getQcur',
'qlimit' => 'getQlimit',
'qmax' => 'getQmax',
'qtime' => 'getQtime',
'rate' => 'getRate',
'rate_lim' => 'getRateLim',
'rate_max' => 'getRateMax',
'req_rate' => 'getReqRate',
'req_rate_max' => 'getReqRateMax',
'req_tot' => 'getReqTot',
'rtime' => 'getRtime',
'scur' => 'getScur',
'sid' => 'getSid',
'slim' => 'getSlim',
'smax' => 'getSmax',
'srv_abrt' => 'getSrvAbrt',
'status' => 'getStatus',
'stot' => 'getStot',
'throttle' => 'getThrottle',
'tracked' => 'getTracked',
'ttime' => 'getTtime',
'weight' => 'getWeight',
'wredis' => 'getWredis',
'wretr' => 'getWretr'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const AGENT_STATUS_UNK = 'UNK';
const AGENT_STATUS_INI = 'INI';
const AGENT_STATUS_SOCKERR = 'SOCKERR';
const AGENT_STATUS_L40_K = 'L40K';
const AGENT_STATUS_L4_TOUT = 'L4TOUT';
const AGENT_STATUS_L4_CON = 'L4CON';
const AGENT_STATUS_L7_OK = 'L7OK';
const AGENT_STATUS_L7_STS = 'L7STS';
const CHECK_STATUS_UNK = 'UNK';
const CHECK_STATUS_INI = 'INI';
const CHECK_STATUS_SOCKERR = 'SOCKERR';
const CHECK_STATUS_L40_K = 'L40K';
const CHECK_STATUS_L4_TOUT = 'L4TOUT';
const CHECK_STATUS_L4_CON = 'L4CON';
const CHECK_STATUS_L6_OK = 'L6OK';
const CHECK_STATUS_L6_TOUT = 'L6TOUT';
const CHECK_STATUS_L6_RSP = 'L6RSP';
const CHECK_STATUS_L7_OK = 'L7OK';
const CHECK_STATUS_L7_OKC = 'L7OKC';
const CHECK_STATUS_L7_TOUT = 'L7TOUT';
const CHECK_STATUS_L7_RSP = 'L7RSP';
const CHECK_STATUS_L7_STS = 'L7STS';
const MODE_TCP = 'tcp';
const MODE_HTTP = 'http';
const MODE_HEALTH = 'health';
const MODE_UNKNOWN = 'unknown';
const STATUS_UP = 'UP';
const STATUS_DOWN = 'DOWN';
const STATUS_NOLB = 'NOLB';
const STATUS_MAINT = 'MAINT';
const STATUS_NO_CHECK = 'no check';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getAgentStatusAllowableValues()
    {
        return [
            self::AGENT_STATUS_UNK,
self::AGENT_STATUS_INI,
self::AGENT_STATUS_SOCKERR,
self::AGENT_STATUS_L40_K,
self::AGENT_STATUS_L4_TOUT,
self::AGENT_STATUS_L4_CON,
self::AGENT_STATUS_L7_OK,
self::AGENT_STATUS_L7_STS,        ];
    }
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getCheckStatusAllowableValues()
    {
        return [
            self::CHECK_STATUS_UNK,
self::CHECK_STATUS_INI,
self::CHECK_STATUS_SOCKERR,
self::CHECK_STATUS_L40_K,
self::CHECK_STATUS_L4_TOUT,
self::CHECK_STATUS_L4_CON,
self::CHECK_STATUS_L6_OK,
self::CHECK_STATUS_L6_TOUT,
self::CHECK_STATUS_L6_RSP,
self::CHECK_STATUS_L7_OK,
self::CHECK_STATUS_L7_OKC,
self::CHECK_STATUS_L7_TOUT,
self::CHECK_STATUS_L7_RSP,
self::CHECK_STATUS_L7_STS,        ];
    }
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getModeAllowableValues()
    {
        return [
            self::MODE_TCP,
self::MODE_HTTP,
self::MODE_HEALTH,
self::MODE_UNKNOWN,        ];
    }
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getStatusAllowableValues()
    {
        return [
            self::STATUS_UP,
self::STATUS_DOWN,
self::STATUS_NOLB,
self::STATUS_MAINT,
self::STATUS_NO_CHECK,        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['act'] = isset($data['act']) ? $data['act'] : null;
        $this->container['addr'] = isset($data['addr']) ? $data['addr'] : null;
        $this->container['agent_code'] = isset($data['agent_code']) ? $data['agent_code'] : null;
        $this->container['agent_desc'] = isset($data['agent_desc']) ? $data['agent_desc'] : null;
        $this->container['agent_duration'] = isset($data['agent_duration']) ? $data['agent_duration'] : null;
        $this->container['agent_fall'] = isset($data['agent_fall']) ? $data['agent_fall'] : null;
        $this->container['agent_health'] = isset($data['agent_health']) ? $data['agent_health'] : null;
        $this->container['agent_rise'] = isset($data['agent_rise']) ? $data['agent_rise'] : null;
        $this->container['agent_status'] = isset($data['agent_status']) ? $data['agent_status'] : null;
        $this->container['algo'] = isset($data['algo']) ? $data['algo'] : null;
        $this->container['bck'] = isset($data['bck']) ? $data['bck'] : null;
        $this->container['bin'] = isset($data['bin']) ? $data['bin'] : null;
        $this->container['bout'] = isset($data['bout']) ? $data['bout'] : null;
        $this->container['check_code'] = isset($data['check_code']) ? $data['check_code'] : null;
        $this->container['check_desc'] = isset($data['check_desc']) ? $data['check_desc'] : null;
        $this->container['check_duration'] = isset($data['check_duration']) ? $data['check_duration'] : null;
        $this->container['check_fall'] = isset($data['check_fall']) ? $data['check_fall'] : null;
        $this->container['check_health'] = isset($data['check_health']) ? $data['check_health'] : null;
        $this->container['check_rise'] = isset($data['check_rise']) ? $data['check_rise'] : null;
        $this->container['check_status'] = isset($data['check_status']) ? $data['check_status'] : null;
        $this->container['chkdown'] = isset($data['chkdown']) ? $data['chkdown'] : null;
        $this->container['chkfail'] = isset($data['chkfail']) ? $data['chkfail'] : null;
        $this->container['cli_abrt'] = isset($data['cli_abrt']) ? $data['cli_abrt'] : null;
        $this->container['comp_byp'] = isset($data['comp_byp']) ? $data['comp_byp'] : null;
        $this->container['comp_in'] = isset($data['comp_in']) ? $data['comp_in'] : null;
        $this->container['comp_out'] = isset($data['comp_out']) ? $data['comp_out'] : null;
        $this->container['comp_rsp'] = isset($data['comp_rsp']) ? $data['comp_rsp'] : null;
        $this->container['conn_rate'] = isset($data['conn_rate']) ? $data['conn_rate'] : null;
        $this->container['conn_rate_max'] = isset($data['conn_rate_max']) ? $data['conn_rate_max'] : null;
        $this->container['conn_tot'] = isset($data['conn_tot']) ? $data['conn_tot'] : null;
        $this->container['cookie'] = isset($data['cookie']) ? $data['cookie'] : null;
        $this->container['ctime'] = isset($data['ctime']) ? $data['ctime'] : null;
        $this->container['dcon'] = isset($data['dcon']) ? $data['dcon'] : null;
        $this->container['downtime'] = isset($data['downtime']) ? $data['downtime'] : null;
        $this->container['dreq'] = isset($data['dreq']) ? $data['dreq'] : null;
        $this->container['dresp'] = isset($data['dresp']) ? $data['dresp'] : null;
        $this->container['dses'] = isset($data['dses']) ? $data['dses'] : null;
        $this->container['econ'] = isset($data['econ']) ? $data['econ'] : null;
        $this->container['ereq'] = isset($data['ereq']) ? $data['ereq'] : null;
        $this->container['eresp'] = isset($data['eresp']) ? $data['eresp'] : null;
        $this->container['hanafail'] = isset($data['hanafail']) ? $data['hanafail'] : null;
        $this->container['hrsp_1xx'] = isset($data['hrsp_1xx']) ? $data['hrsp_1xx'] : null;
        $this->container['hrsp_2xx'] = isset($data['hrsp_2xx']) ? $data['hrsp_2xx'] : null;
        $this->container['hrsp_3xx'] = isset($data['hrsp_3xx']) ? $data['hrsp_3xx'] : null;
        $this->container['hrsp_4xx'] = isset($data['hrsp_4xx']) ? $data['hrsp_4xx'] : null;
        $this->container['hrsp_5xx'] = isset($data['hrsp_5xx']) ? $data['hrsp_5xx'] : null;
        $this->container['hrsp_other'] = isset($data['hrsp_other']) ? $data['hrsp_other'] : null;
        $this->container['iid'] = isset($data['iid']) ? $data['iid'] : null;
        $this->container['intercepted'] = isset($data['intercepted']) ? $data['intercepted'] : null;
        $this->container['lastchg'] = isset($data['lastchg']) ? $data['lastchg'] : null;
        $this->container['lastsess'] = isset($data['lastsess']) ? $data['lastsess'] : null;
        $this->container['lbtot'] = isset($data['lbtot']) ? $data['lbtot'] : null;
        $this->container['mode'] = isset($data['mode']) ? $data['mode'] : null;
        $this->container['pid'] = isset($data['pid']) ? $data['pid'] : null;
        $this->container['qcur'] = isset($data['qcur']) ? $data['qcur'] : null;
        $this->container['qlimit'] = isset($data['qlimit']) ? $data['qlimit'] : null;
        $this->container['qmax'] = isset($data['qmax']) ? $data['qmax'] : null;
        $this->container['qtime'] = isset($data['qtime']) ? $data['qtime'] : null;
        $this->container['rate'] = isset($data['rate']) ? $data['rate'] : null;
        $this->container['rate_lim'] = isset($data['rate_lim']) ? $data['rate_lim'] : null;
        $this->container['rate_max'] = isset($data['rate_max']) ? $data['rate_max'] : null;
        $this->container['req_rate'] = isset($data['req_rate']) ? $data['req_rate'] : null;
        $this->container['req_rate_max'] = isset($data['req_rate_max']) ? $data['req_rate_max'] : null;
        $this->container['req_tot'] = isset($data['req_tot']) ? $data['req_tot'] : null;
        $this->container['rtime'] = isset($data['rtime']) ? $data['rtime'] : null;
        $this->container['scur'] = isset($data['scur']) ? $data['scur'] : null;
        $this->container['sid'] = isset($data['sid']) ? $data['sid'] : null;
        $this->container['slim'] = isset($data['slim']) ? $data['slim'] : null;
        $this->container['smax'] = isset($data['smax']) ? $data['smax'] : null;
        $this->container['srv_abrt'] = isset($data['srv_abrt']) ? $data['srv_abrt'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['stot'] = isset($data['stot']) ? $data['stot'] : null;
        $this->container['throttle'] = isset($data['throttle']) ? $data['throttle'] : null;
        $this->container['tracked'] = isset($data['tracked']) ? $data['tracked'] : null;
        $this->container['ttime'] = isset($data['ttime']) ? $data['ttime'] : null;
        $this->container['weight'] = isset($data['weight']) ? $data['weight'] : null;
        $this->container['wredis'] = isset($data['wredis']) ? $data['wredis'] : null;
        $this->container['wretr'] = isset($data['wretr']) ? $data['wretr'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getAgentStatusAllowableValues();
        if (!is_null($this->container['agent_status']) && !in_array($this->container['agent_status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'agent_status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getCheckStatusAllowableValues();
        if (!is_null($this->container['check_status']) && !in_array($this->container['check_status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'check_status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getModeAllowableValues();
        if (!is_null($this->container['mode']) && !in_array($this->container['mode'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'mode', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getStatusAllowableValues();
        if (!is_null($this->container['status']) && !in_array($this->container['status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets act
     *
     * @return int
     */
    public function getAct()
    {
        return $this->container['act'];
    }

    /**
     * Sets act
     *
     * @param int $act act
     *
     * @return $this
     */
    public function setAct($act)
    {
        $this->container['act'] = $act;

        return $this;
    }

    /**
     * Gets addr
     *
     * @return string
     */
    public function getAddr()
    {
        return $this->container['addr'];
    }

    /**
     * Sets addr
     *
     * @param string $addr addr
     *
     * @return $this
     */
    public function setAddr($addr)
    {
        $this->container['addr'] = $addr;

        return $this;
    }

    /**
     * Gets agent_code
     *
     * @return int
     */
    public function getAgentCode()
    {
        return $this->container['agent_code'];
    }

    /**
     * Sets agent_code
     *
     * @param int $agent_code agent_code
     *
     * @return $this
     */
    public function setAgentCode($agent_code)
    {
        $this->container['agent_code'] = $agent_code;

        return $this;
    }

    /**
     * Gets agent_desc
     *
     * @return string
     */
    public function getAgentDesc()
    {
        return $this->container['agent_desc'];
    }

    /**
     * Sets agent_desc
     *
     * @param string $agent_desc agent_desc
     *
     * @return $this
     */
    public function setAgentDesc($agent_desc)
    {
        $this->container['agent_desc'] = $agent_desc;

        return $this;
    }

    /**
     * Gets agent_duration
     *
     * @return int
     */
    public function getAgentDuration()
    {
        return $this->container['agent_duration'];
    }

    /**
     * Sets agent_duration
     *
     * @param int $agent_duration agent_duration
     *
     * @return $this
     */
    public function setAgentDuration($agent_duration)
    {
        $this->container['agent_duration'] = $agent_duration;

        return $this;
    }

    /**
     * Gets agent_fall
     *
     * @return int
     */
    public function getAgentFall()
    {
        return $this->container['agent_fall'];
    }

    /**
     * Sets agent_fall
     *
     * @param int $agent_fall agent_fall
     *
     * @return $this
     */
    public function setAgentFall($agent_fall)
    {
        $this->container['agent_fall'] = $agent_fall;

        return $this;
    }

    /**
     * Gets agent_health
     *
     * @return int
     */
    public function getAgentHealth()
    {
        return $this->container['agent_health'];
    }

    /**
     * Sets agent_health
     *
     * @param int $agent_health agent_health
     *
     * @return $this
     */
    public function setAgentHealth($agent_health)
    {
        $this->container['agent_health'] = $agent_health;

        return $this;
    }

    /**
     * Gets agent_rise
     *
     * @return int
     */
    public function getAgentRise()
    {
        return $this->container['agent_rise'];
    }

    /**
     * Sets agent_rise
     *
     * @param int $agent_rise agent_rise
     *
     * @return $this
     */
    public function setAgentRise($agent_rise)
    {
        $this->container['agent_rise'] = $agent_rise;

        return $this;
    }

    /**
     * Gets agent_status
     *
     * @return string
     */
    public function getAgentStatus()
    {
        return $this->container['agent_status'];
    }

    /**
     * Sets agent_status
     *
     * @param string $agent_status agent_status
     *
     * @return $this
     */
    public function setAgentStatus($agent_status)
    {
        $allowedValues = $this->getAgentStatusAllowableValues();
        if (!is_null($agent_status) && !in_array($agent_status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'agent_status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['agent_status'] = $agent_status;

        return $this;
    }

    /**
     * Gets algo
     *
     * @return string
     */
    public function getAlgo()
    {
        return $this->container['algo'];
    }

    /**
     * Sets algo
     *
     * @param string $algo algo
     *
     * @return $this
     */
    public function setAlgo($algo)
    {
        $this->container['algo'] = $algo;

        return $this;
    }

    /**
     * Gets bck
     *
     * @return int
     */
    public function getBck()
    {
        return $this->container['bck'];
    }

    /**
     * Sets bck
     *
     * @param int $bck bck
     *
     * @return $this
     */
    public function setBck($bck)
    {
        $this->container['bck'] = $bck;

        return $this;
    }

    /**
     * Gets bin
     *
     * @return int
     */
    public function getBin()
    {
        return $this->container['bin'];
    }

    /**
     * Sets bin
     *
     * @param int $bin bin
     *
     * @return $this
     */
    public function setBin($bin)
    {
        $this->container['bin'] = $bin;

        return $this;
    }

    /**
     * Gets bout
     *
     * @return int
     */
    public function getBout()
    {
        return $this->container['bout'];
    }

    /**
     * Sets bout
     *
     * @param int $bout bout
     *
     * @return $this
     */
    public function setBout($bout)
    {
        $this->container['bout'] = $bout;

        return $this;
    }

    /**
     * Gets check_code
     *
     * @return int
     */
    public function getCheckCode()
    {
        return $this->container['check_code'];
    }

    /**
     * Sets check_code
     *
     * @param int $check_code check_code
     *
     * @return $this
     */
    public function setCheckCode($check_code)
    {
        $this->container['check_code'] = $check_code;

        return $this;
    }

    /**
     * Gets check_desc
     *
     * @return string
     */
    public function getCheckDesc()
    {
        return $this->container['check_desc'];
    }

    /**
     * Sets check_desc
     *
     * @param string $check_desc check_desc
     *
     * @return $this
     */
    public function setCheckDesc($check_desc)
    {
        $this->container['check_desc'] = $check_desc;

        return $this;
    }

    /**
     * Gets check_duration
     *
     * @return int
     */
    public function getCheckDuration()
    {
        return $this->container['check_duration'];
    }

    /**
     * Sets check_duration
     *
     * @param int $check_duration check_duration
     *
     * @return $this
     */
    public function setCheckDuration($check_duration)
    {
        $this->container['check_duration'] = $check_duration;

        return $this;
    }

    /**
     * Gets check_fall
     *
     * @return int
     */
    public function getCheckFall()
    {
        return $this->container['check_fall'];
    }

    /**
     * Sets check_fall
     *
     * @param int $check_fall check_fall
     *
     * @return $this
     */
    public function setCheckFall($check_fall)
    {
        $this->container['check_fall'] = $check_fall;

        return $this;
    }

    /**
     * Gets check_health
     *
     * @return int
     */
    public function getCheckHealth()
    {
        return $this->container['check_health'];
    }

    /**
     * Sets check_health
     *
     * @param int $check_health check_health
     *
     * @return $this
     */
    public function setCheckHealth($check_health)
    {
        $this->container['check_health'] = $check_health;

        return $this;
    }

    /**
     * Gets check_rise
     *
     * @return int
     */
    public function getCheckRise()
    {
        return $this->container['check_rise'];
    }

    /**
     * Sets check_rise
     *
     * @param int $check_rise check_rise
     *
     * @return $this
     */
    public function setCheckRise($check_rise)
    {
        $this->container['check_rise'] = $check_rise;

        return $this;
    }

    /**
     * Gets check_status
     *
     * @return string
     */
    public function getCheckStatus()
    {
        return $this->container['check_status'];
    }

    /**
     * Sets check_status
     *
     * @param string $check_status check_status
     *
     * @return $this
     */
    public function setCheckStatus($check_status)
    {
        $allowedValues = $this->getCheckStatusAllowableValues();
        if (!is_null($check_status) && !in_array($check_status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'check_status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['check_status'] = $check_status;

        return $this;
    }

    /**
     * Gets chkdown
     *
     * @return int
     */
    public function getChkdown()
    {
        return $this->container['chkdown'];
    }

    /**
     * Sets chkdown
     *
     * @param int $chkdown chkdown
     *
     * @return $this
     */
    public function setChkdown($chkdown)
    {
        $this->container['chkdown'] = $chkdown;

        return $this;
    }

    /**
     * Gets chkfail
     *
     * @return int
     */
    public function getChkfail()
    {
        return $this->container['chkfail'];
    }

    /**
     * Sets chkfail
     *
     * @param int $chkfail chkfail
     *
     * @return $this
     */
    public function setChkfail($chkfail)
    {
        $this->container['chkfail'] = $chkfail;

        return $this;
    }

    /**
     * Gets cli_abrt
     *
     * @return int
     */
    public function getCliAbrt()
    {
        return $this->container['cli_abrt'];
    }

    /**
     * Sets cli_abrt
     *
     * @param int $cli_abrt cli_abrt
     *
     * @return $this
     */
    public function setCliAbrt($cli_abrt)
    {
        $this->container['cli_abrt'] = $cli_abrt;

        return $this;
    }

    /**
     * Gets comp_byp
     *
     * @return int
     */
    public function getCompByp()
    {
        return $this->container['comp_byp'];
    }

    /**
     * Sets comp_byp
     *
     * @param int $comp_byp comp_byp
     *
     * @return $this
     */
    public function setCompByp($comp_byp)
    {
        $this->container['comp_byp'] = $comp_byp;

        return $this;
    }

    /**
     * Gets comp_in
     *
     * @return int
     */
    public function getCompIn()
    {
        return $this->container['comp_in'];
    }

    /**
     * Sets comp_in
     *
     * @param int $comp_in comp_in
     *
     * @return $this
     */
    public function setCompIn($comp_in)
    {
        $this->container['comp_in'] = $comp_in;

        return $this;
    }

    /**
     * Gets comp_out
     *
     * @return int
     */
    public function getCompOut()
    {
        return $this->container['comp_out'];
    }

    /**
     * Sets comp_out
     *
     * @param int $comp_out comp_out
     *
     * @return $this
     */
    public function setCompOut($comp_out)
    {
        $this->container['comp_out'] = $comp_out;

        return $this;
    }

    /**
     * Gets comp_rsp
     *
     * @return int
     */
    public function getCompRsp()
    {
        return $this->container['comp_rsp'];
    }

    /**
     * Sets comp_rsp
     *
     * @param int $comp_rsp comp_rsp
     *
     * @return $this
     */
    public function setCompRsp($comp_rsp)
    {
        $this->container['comp_rsp'] = $comp_rsp;

        return $this;
    }

    /**
     * Gets conn_rate
     *
     * @return int
     */
    public function getConnRate()
    {
        return $this->container['conn_rate'];
    }

    /**
     * Sets conn_rate
     *
     * @param int $conn_rate conn_rate
     *
     * @return $this
     */
    public function setConnRate($conn_rate)
    {
        $this->container['conn_rate'] = $conn_rate;

        return $this;
    }

    /**
     * Gets conn_rate_max
     *
     * @return int
     */
    public function getConnRateMax()
    {
        return $this->container['conn_rate_max'];
    }

    /**
     * Sets conn_rate_max
     *
     * @param int $conn_rate_max conn_rate_max
     *
     * @return $this
     */
    public function setConnRateMax($conn_rate_max)
    {
        $this->container['conn_rate_max'] = $conn_rate_max;

        return $this;
    }

    /**
     * Gets conn_tot
     *
     * @return int
     */
    public function getConnTot()
    {
        return $this->container['conn_tot'];
    }

    /**
     * Sets conn_tot
     *
     * @param int $conn_tot conn_tot
     *
     * @return $this
     */
    public function setConnTot($conn_tot)
    {
        $this->container['conn_tot'] = $conn_tot;

        return $this;
    }

    /**
     * Gets cookie
     *
     * @return string
     */
    public function getCookie()
    {
        return $this->container['cookie'];
    }

    /**
     * Sets cookie
     *
     * @param string $cookie cookie
     *
     * @return $this
     */
    public function setCookie($cookie)
    {
        $this->container['cookie'] = $cookie;

        return $this;
    }

    /**
     * Gets ctime
     *
     * @return int
     */
    public function getCtime()
    {
        return $this->container['ctime'];
    }

    /**
     * Sets ctime
     *
     * @param int $ctime ctime
     *
     * @return $this
     */
    public function setCtime($ctime)
    {
        $this->container['ctime'] = $ctime;

        return $this;
    }

    /**
     * Gets dcon
     *
     * @return int
     */
    public function getDcon()
    {
        return $this->container['dcon'];
    }

    /**
     * Sets dcon
     *
     * @param int $dcon dcon
     *
     * @return $this
     */
    public function setDcon($dcon)
    {
        $this->container['dcon'] = $dcon;

        return $this;
    }

    /**
     * Gets downtime
     *
     * @return int
     */
    public function getDowntime()
    {
        return $this->container['downtime'];
    }

    /**
     * Sets downtime
     *
     * @param int $downtime downtime
     *
     * @return $this
     */
    public function setDowntime($downtime)
    {
        $this->container['downtime'] = $downtime;

        return $this;
    }

    /**
     * Gets dreq
     *
     * @return int
     */
    public function getDreq()
    {
        return $this->container['dreq'];
    }

    /**
     * Sets dreq
     *
     * @param int $dreq dreq
     *
     * @return $this
     */
    public function setDreq($dreq)
    {
        $this->container['dreq'] = $dreq;

        return $this;
    }

    /**
     * Gets dresp
     *
     * @return int
     */
    public function getDresp()
    {
        return $this->container['dresp'];
    }

    /**
     * Sets dresp
     *
     * @param int $dresp dresp
     *
     * @return $this
     */
    public function setDresp($dresp)
    {
        $this->container['dresp'] = $dresp;

        return $this;
    }

    /**
     * Gets dses
     *
     * @return int
     */
    public function getDses()
    {
        return $this->container['dses'];
    }

    /**
     * Sets dses
     *
     * @param int $dses dses
     *
     * @return $this
     */
    public function setDses($dses)
    {
        $this->container['dses'] = $dses;

        return $this;
    }

    /**
     * Gets econ
     *
     * @return int
     */
    public function getEcon()
    {
        return $this->container['econ'];
    }

    /**
     * Sets econ
     *
     * @param int $econ econ
     *
     * @return $this
     */
    public function setEcon($econ)
    {
        $this->container['econ'] = $econ;

        return $this;
    }

    /**
     * Gets ereq
     *
     * @return int
     */
    public function getEreq()
    {
        return $this->container['ereq'];
    }

    /**
     * Sets ereq
     *
     * @param int $ereq ereq
     *
     * @return $this
     */
    public function setEreq($ereq)
    {
        $this->container['ereq'] = $ereq;

        return $this;
    }

    /**
     * Gets eresp
     *
     * @return int
     */
    public function getEresp()
    {
        return $this->container['eresp'];
    }

    /**
     * Sets eresp
     *
     * @param int $eresp eresp
     *
     * @return $this
     */
    public function setEresp($eresp)
    {
        $this->container['eresp'] = $eresp;

        return $this;
    }

    /**
     * Gets hanafail
     *
     * @return string
     */
    public function getHanafail()
    {
        return $this->container['hanafail'];
    }

    /**
     * Sets hanafail
     *
     * @param string $hanafail hanafail
     *
     * @return $this
     */
    public function setHanafail($hanafail)
    {
        $this->container['hanafail'] = $hanafail;

        return $this;
    }

    /**
     * Gets hrsp_1xx
     *
     * @return int
     */
    public function getHrsp1xx()
    {
        return $this->container['hrsp_1xx'];
    }

    /**
     * Sets hrsp_1xx
     *
     * @param int $hrsp_1xx hrsp_1xx
     *
     * @return $this
     */
    public function setHrsp1xx($hrsp_1xx)
    {
        $this->container['hrsp_1xx'] = $hrsp_1xx;

        return $this;
    }

    /**
     * Gets hrsp_2xx
     *
     * @return int
     */
    public function getHrsp2xx()
    {
        return $this->container['hrsp_2xx'];
    }

    /**
     * Sets hrsp_2xx
     *
     * @param int $hrsp_2xx hrsp_2xx
     *
     * @return $this
     */
    public function setHrsp2xx($hrsp_2xx)
    {
        $this->container['hrsp_2xx'] = $hrsp_2xx;

        return $this;
    }

    /**
     * Gets hrsp_3xx
     *
     * @return int
     */
    public function getHrsp3xx()
    {
        return $this->container['hrsp_3xx'];
    }

    /**
     * Sets hrsp_3xx
     *
     * @param int $hrsp_3xx hrsp_3xx
     *
     * @return $this
     */
    public function setHrsp3xx($hrsp_3xx)
    {
        $this->container['hrsp_3xx'] = $hrsp_3xx;

        return $this;
    }

    /**
     * Gets hrsp_4xx
     *
     * @return int
     */
    public function getHrsp4xx()
    {
        return $this->container['hrsp_4xx'];
    }

    /**
     * Sets hrsp_4xx
     *
     * @param int $hrsp_4xx hrsp_4xx
     *
     * @return $this
     */
    public function setHrsp4xx($hrsp_4xx)
    {
        $this->container['hrsp_4xx'] = $hrsp_4xx;

        return $this;
    }

    /**
     * Gets hrsp_5xx
     *
     * @return int
     */
    public function getHrsp5xx()
    {
        return $this->container['hrsp_5xx'];
    }

    /**
     * Sets hrsp_5xx
     *
     * @param int $hrsp_5xx hrsp_5xx
     *
     * @return $this
     */
    public function setHrsp5xx($hrsp_5xx)
    {
        $this->container['hrsp_5xx'] = $hrsp_5xx;

        return $this;
    }

    /**
     * Gets hrsp_other
     *
     * @return int
     */
    public function getHrspOther()
    {
        return $this->container['hrsp_other'];
    }

    /**
     * Sets hrsp_other
     *
     * @param int $hrsp_other hrsp_other
     *
     * @return $this
     */
    public function setHrspOther($hrsp_other)
    {
        $this->container['hrsp_other'] = $hrsp_other;

        return $this;
    }

    /**
     * Gets iid
     *
     * @return int
     */
    public function getIid()
    {
        return $this->container['iid'];
    }

    /**
     * Sets iid
     *
     * @param int $iid iid
     *
     * @return $this
     */
    public function setIid($iid)
    {
        $this->container['iid'] = $iid;

        return $this;
    }

    /**
     * Gets intercepted
     *
     * @return int
     */
    public function getIntercepted()
    {
        return $this->container['intercepted'];
    }

    /**
     * Sets intercepted
     *
     * @param int $intercepted intercepted
     *
     * @return $this
     */
    public function setIntercepted($intercepted)
    {
        $this->container['intercepted'] = $intercepted;

        return $this;
    }

    /**
     * Gets lastchg
     *
     * @return int
     */
    public function getLastchg()
    {
        return $this->container['lastchg'];
    }

    /**
     * Sets lastchg
     *
     * @param int $lastchg lastchg
     *
     * @return $this
     */
    public function setLastchg($lastchg)
    {
        $this->container['lastchg'] = $lastchg;

        return $this;
    }

    /**
     * Gets lastsess
     *
     * @return int
     */
    public function getLastsess()
    {
        return $this->container['lastsess'];
    }

    /**
     * Sets lastsess
     *
     * @param int $lastsess lastsess
     *
     * @return $this
     */
    public function setLastsess($lastsess)
    {
        $this->container['lastsess'] = $lastsess;

        return $this;
    }

    /**
     * Gets lbtot
     *
     * @return int
     */
    public function getLbtot()
    {
        return $this->container['lbtot'];
    }

    /**
     * Sets lbtot
     *
     * @param int $lbtot lbtot
     *
     * @return $this
     */
    public function setLbtot($lbtot)
    {
        $this->container['lbtot'] = $lbtot;

        return $this;
    }

    /**
     * Gets mode
     *
     * @return string
     */
    public function getMode()
    {
        return $this->container['mode'];
    }

    /**
     * Sets mode
     *
     * @param string $mode mode
     *
     * @return $this
     */
    public function setMode($mode)
    {
        $allowedValues = $this->getModeAllowableValues();
        if (!is_null($mode) && !in_array($mode, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'mode', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['mode'] = $mode;

        return $this;
    }

    /**
     * Gets pid
     *
     * @return int
     */
    public function getPid()
    {
        return $this->container['pid'];
    }

    /**
     * Sets pid
     *
     * @param int $pid pid
     *
     * @return $this
     */
    public function setPid($pid)
    {
        $this->container['pid'] = $pid;

        return $this;
    }

    /**
     * Gets qcur
     *
     * @return int
     */
    public function getQcur()
    {
        return $this->container['qcur'];
    }

    /**
     * Sets qcur
     *
     * @param int $qcur qcur
     *
     * @return $this
     */
    public function setQcur($qcur)
    {
        $this->container['qcur'] = $qcur;

        return $this;
    }

    /**
     * Gets qlimit
     *
     * @return int
     */
    public function getQlimit()
    {
        return $this->container['qlimit'];
    }

    /**
     * Sets qlimit
     *
     * @param int $qlimit qlimit
     *
     * @return $this
     */
    public function setQlimit($qlimit)
    {
        $this->container['qlimit'] = $qlimit;

        return $this;
    }

    /**
     * Gets qmax
     *
     * @return int
     */
    public function getQmax()
    {
        return $this->container['qmax'];
    }

    /**
     * Sets qmax
     *
     * @param int $qmax qmax
     *
     * @return $this
     */
    public function setQmax($qmax)
    {
        $this->container['qmax'] = $qmax;

        return $this;
    }

    /**
     * Gets qtime
     *
     * @return int
     */
    public function getQtime()
    {
        return $this->container['qtime'];
    }

    /**
     * Sets qtime
     *
     * @param int $qtime qtime
     *
     * @return $this
     */
    public function setQtime($qtime)
    {
        $this->container['qtime'] = $qtime;

        return $this;
    }

    /**
     * Gets rate
     *
     * @return int
     */
    public function getRate()
    {
        return $this->container['rate'];
    }

    /**
     * Sets rate
     *
     * @param int $rate rate
     *
     * @return $this
     */
    public function setRate($rate)
    {
        $this->container['rate'] = $rate;

        return $this;
    }

    /**
     * Gets rate_lim
     *
     * @return int
     */
    public function getRateLim()
    {
        return $this->container['rate_lim'];
    }

    /**
     * Sets rate_lim
     *
     * @param int $rate_lim rate_lim
     *
     * @return $this
     */
    public function setRateLim($rate_lim)
    {
        $this->container['rate_lim'] = $rate_lim;

        return $this;
    }

    /**
     * Gets rate_max
     *
     * @return int
     */
    public function getRateMax()
    {
        return $this->container['rate_max'];
    }

    /**
     * Sets rate_max
     *
     * @param int $rate_max rate_max
     *
     * @return $this
     */
    public function setRateMax($rate_max)
    {
        $this->container['rate_max'] = $rate_max;

        return $this;
    }

    /**
     * Gets req_rate
     *
     * @return int
     */
    public function getReqRate()
    {
        return $this->container['req_rate'];
    }

    /**
     * Sets req_rate
     *
     * @param int $req_rate req_rate
     *
     * @return $this
     */
    public function setReqRate($req_rate)
    {
        $this->container['req_rate'] = $req_rate;

        return $this;
    }

    /**
     * Gets req_rate_max
     *
     * @return int
     */
    public function getReqRateMax()
    {
        return $this->container['req_rate_max'];
    }

    /**
     * Sets req_rate_max
     *
     * @param int $req_rate_max req_rate_max
     *
     * @return $this
     */
    public function setReqRateMax($req_rate_max)
    {
        $this->container['req_rate_max'] = $req_rate_max;

        return $this;
    }

    /**
     * Gets req_tot
     *
     * @return int
     */
    public function getReqTot()
    {
        return $this->container['req_tot'];
    }

    /**
     * Sets req_tot
     *
     * @param int $req_tot req_tot
     *
     * @return $this
     */
    public function setReqTot($req_tot)
    {
        $this->container['req_tot'] = $req_tot;

        return $this;
    }

    /**
     * Gets rtime
     *
     * @return int
     */
    public function getRtime()
    {
        return $this->container['rtime'];
    }

    /**
     * Sets rtime
     *
     * @param int $rtime rtime
     *
     * @return $this
     */
    public function setRtime($rtime)
    {
        $this->container['rtime'] = $rtime;

        return $this;
    }

    /**
     * Gets scur
     *
     * @return int
     */
    public function getScur()
    {
        return $this->container['scur'];
    }

    /**
     * Sets scur
     *
     * @param int $scur scur
     *
     * @return $this
     */
    public function setScur($scur)
    {
        $this->container['scur'] = $scur;

        return $this;
    }

    /**
     * Gets sid
     *
     * @return int
     */
    public function getSid()
    {
        return $this->container['sid'];
    }

    /**
     * Sets sid
     *
     * @param int $sid sid
     *
     * @return $this
     */
    public function setSid($sid)
    {
        $this->container['sid'] = $sid;

        return $this;
    }

    /**
     * Gets slim
     *
     * @return int
     */
    public function getSlim()
    {
        return $this->container['slim'];
    }

    /**
     * Sets slim
     *
     * @param int $slim slim
     *
     * @return $this
     */
    public function setSlim($slim)
    {
        $this->container['slim'] = $slim;

        return $this;
    }

    /**
     * Gets smax
     *
     * @return int
     */
    public function getSmax()
    {
        return $this->container['smax'];
    }

    /**
     * Sets smax
     *
     * @param int $smax smax
     *
     * @return $this
     */
    public function setSmax($smax)
    {
        $this->container['smax'] = $smax;

        return $this;
    }

    /**
     * Gets srv_abrt
     *
     * @return int
     */
    public function getSrvAbrt()
    {
        return $this->container['srv_abrt'];
    }

    /**
     * Sets srv_abrt
     *
     * @param int $srv_abrt srv_abrt
     *
     * @return $this
     */
    public function setSrvAbrt($srv_abrt)
    {
        $this->container['srv_abrt'] = $srv_abrt;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $allowedValues = $this->getStatusAllowableValues();
        if (!is_null($status) && !in_array($status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets stot
     *
     * @return int
     */
    public function getStot()
    {
        return $this->container['stot'];
    }

    /**
     * Sets stot
     *
     * @param int $stot stot
     *
     * @return $this
     */
    public function setStot($stot)
    {
        $this->container['stot'] = $stot;

        return $this;
    }

    /**
     * Gets throttle
     *
     * @return int
     */
    public function getThrottle()
    {
        return $this->container['throttle'];
    }

    /**
     * Sets throttle
     *
     * @param int $throttle throttle
     *
     * @return $this
     */
    public function setThrottle($throttle)
    {
        $this->container['throttle'] = $throttle;

        return $this;
    }

    /**
     * Gets tracked
     *
     * @return string
     */
    public function getTracked()
    {
        return $this->container['tracked'];
    }

    /**
     * Sets tracked
     *
     * @param string $tracked tracked
     *
     * @return $this
     */
    public function setTracked($tracked)
    {
        $this->container['tracked'] = $tracked;

        return $this;
    }

    /**
     * Gets ttime
     *
     * @return int
     */
    public function getTtime()
    {
        return $this->container['ttime'];
    }

    /**
     * Sets ttime
     *
     * @param int $ttime ttime
     *
     * @return $this
     */
    public function setTtime($ttime)
    {
        $this->container['ttime'] = $ttime;

        return $this;
    }

    /**
     * Gets weight
     *
     * @return int
     */
    public function getWeight()
    {
        return $this->container['weight'];
    }

    /**
     * Sets weight
     *
     * @param int $weight weight
     *
     * @return $this
     */
    public function setWeight($weight)
    {
        $this->container['weight'] = $weight;

        return $this;
    }

    /**
     * Gets wredis
     *
     * @return int
     */
    public function getWredis()
    {
        return $this->container['wredis'];
    }

    /**
     * Sets wredis
     *
     * @param int $wredis wredis
     *
     * @return $this
     */
    public function setWredis($wredis)
    {
        $this->container['wredis'] = $wredis;

        return $this;
    }

    /**
     * Gets wretr
     *
     * @return int
     */
    public function getWretr()
    {
        return $this->container['wretr'];
    }

    /**
     * Sets wretr
     *
     * @param int $wretr wretr
     *
     * @return $this
     */
    public function setWretr($wretr)
    {
        $this->container['wretr'] = $wretr;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
